topic: Tokenization in Spacy
subject: NLP in Python
questions:

  - question:
    - What would be the output of the following code ?
    - type: code
      lang: python
      content:
        - import spacy
        - nlp = spacy.blank("en")
        - print(type(nlp))
        - "# Output ___"
        - doc = nlp("This is a sentence written by Dr. John.")
        - print(type(doc))
        - "# Output ___"
        - print(type(doc[0]))
        - "# Output ___"
        - print(type(doc[0:5]))
        - "# Output ___"
    answers:
      - spacy.lang.en.English
      - spacy.tokens.doc.Doc
      - spacy.tokens.token.Token
      - spacy.tokens.span.Span

  - question:
      - What would be the output of the following code
      - type: code
        lang: python
        content: 
          - import spacy
          - nlp = spacy.blank("en")
          - doc = nlp("This is the first sentence written by Dr. John.")
          - first_token = doc[0]
          - "# Check if the token is alphabetical"
          - first_token.___
          - "# Check if the token is a number"
          - first_token.___
          - "# Check if the token is a punctuation"
          - first_token.___
          - "# Write the output of the following code"
          - fourth_token = doc[3]
          - print(fourth_token.like_num)
          - "# Check if the token is a currency"
          - fourth_token.___       
    answers:
      - is_alpha
      - like_num
      - is_punct
      - "True"
      - is_currency

  - question: Load the english language pipeline
    answers:
      - spacy.load("en_core_web_sm")

  - question: Which of the following components does the blank pipeline comes with?
    answers:
      - 0
    options:
      - Tokenizer
      - Tagger
      - Parser
      - Ner
      
  - question:
    - What would be the output of the following code
    - type: code
      lang: python
      content:
      - import spacy
      - nlp = spacy.blank("en")
      - doc = nlp("This is the first sentence written by Dr. John.")
      - "# add the `sentencizer` component to the language pipeline"
      - nlp.___('___')
      - "# Get the pipelines of the current language model"
      - nlp.___
      - "# Get all the sentences of the text"
      - "for sentence in ___.___:"
        - print(sentence)
    answers:
      - add_pipe
      - sentencizer
      - pipe_names
      - doc
      - sents